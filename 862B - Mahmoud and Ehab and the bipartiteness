#include <iostream>
#include <queue>
#include <algorithm>
#include <vector>
using namespace std;
#define ll long long
 
void dfs(int node, vector<vector<int>>& adj, vector<int>& col, int color){
    col[node] = color;
    for(auto it: adj[node]){
        if(col[it]==-1){
            dfs(it,adj,col,!color);
        }
    }
}
void solve(){
    ll n;cin>>n;
    vector<vector<int>> adj(n+1);
    for (int i = 0; i < n-1; i++){
        int u,v;cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    
    vector<int> col(n+1,-1);
    dfs(1,adj,col,0);
    ll first = 0, second = 0;
    for(int i=1; i<=n; i++){
        if(col[i]==1)first++;
        else second++;
    }
    ll ans = first*second - n + 1;
    cout<<ans<<endl;
}
int main(){
    // ll t;cin>>t;
    // while (t--){
        solve();
    // }
    return 0;
}
